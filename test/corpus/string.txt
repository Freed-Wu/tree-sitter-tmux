========================================
string: raw
========================================

foo=\033

---

(file
  (environment_assignment
    (name)
    (value
      (backslash_escape))))

========================================
string: single quotes
========================================

foo='"'

---

(file
  (environment_assignment
    (name)
    (value
      (raw_string))))

========================================
string: double quotes
========================================

foo="\\u09aF\\u0123abCD\\777\\\a"

---

(file
  (environment_assignment
    (name)
    (value
      (string
        (backslash_escape)
        (backslash_escape)
        (backslash_escape)
        (backslash_escape)
        (backslash_escape)))))

========================================
string: mixed
========================================

foo=\033'1'"2"

---

(file
  (environment_assignment
    (name)
    (value
      (backslash_escape)
      (raw_string)
      (string))))

========================================
string: multi line
========================================

foo="a\
b\
c"

---

(file
  (environment_assignment
    (name)
    (value
      (string))))

========================================
string: variable
========================================

foo='#S#{var}'

---

(file
  (environment_assignment
    (name)
    (value
      (raw_string
        (expr_raw
          (variable_name_short))
        (expr_raw
          (variable_name))))))

========================================
string: status
========================================

foo='#[bold,fg=#000000,italic]'

---

(file
  (environment_assignment
    (name)
    (value
      (raw_string
        (expr_raw
          (attribute)
          (attribute)
          (attribute))))))

========================================
string: shell command
========================================

foo='#(ls)'

---

(file
  (environment_assignment
    (name)
    (value
      (raw_string
        (expr_raw
          (shell))))))

========================================
string: shell command args
========================================

foo='#(date --debug +%Y-%m-%d)'

---

(file
  (environment_assignment
    (name)
    (value
      (raw_string
        (expr_raw
          (shell))))))

========================================
string: comparison
========================================

foo='#{==:#{var1}#{var2},#{var3}}'

---

(file
  (environment_assignment
    (name)
    (value
      (raw_string
        (expr_raw
          (operator)
          (expr_raw
            (variable_name))
          (expr_raw
            (variable_name))
          (expr_raw
            (variable_name)))))))

========================================
string: comparison empty else
========================================

foo='#{==:#{var},}'

---

(file
  (environment_assignment
    (name)
    (value
      (raw_string
        (expr_raw
          (operator)
          (expr_raw
            (variable_name)))))))

========================================
string: ternary
========================================

foo="#{?var1,#{var1},#{var2}}"

---

(file
  (environment_assignment
    (name)
    (value
      (string
        (expr
          (variable_name)
          (expr
            (variable_name))
          (expr
            (variable_name)))))))

========================================
string: ternary empty if
========================================

foo="#{?var1,,#{var2}}"

---

(file
  (environment_assignment
    (name)
    (value
      (string
        (expr
          (variable_name)
          (expr
            (variable_name)))))))

========================================
string: ternary empty else
========================================

foo="#{?var1,#{var2},}"

---

(file
  (environment_assignment
    (name)
    (value
      (string
        (expr
          (variable_name)
          (expr
            (variable_name)))))))

========================================
string: condition nested
========================================

foo="#{?#{==:#{var1},},a#{var2},b#[bold,italic]}"

---

(file
  (environment_assignment
    (name)
    (value
      (string
        (expr
          (expr
            (operator)
            (expr
              (variable_name)))
          (expr
            (variable_name))
          (expr
            (attribute)
            (attribute)))))))
