[build-system]
requires = ["scikit-build-core"]
build-backend = "scikit_build_core.build"

[project]
name = "tree-sitter-tmux"
description = "tmux grammar for tree-sitter"
readme = "README.md"
# sysconfig.get_preferred_scheme()
requires-python = ">= 3.10"
keywords = ["parsing", "incremental"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Build Tools",
  "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX",
  "Operating System :: Unix",
  "Operating System :: MacOS",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
# dynamic = ["version", "dependencies", "optional-dependencies"]
# https://github.com/pypa/twine/issues/753
dynamic = ["version"]
dependencies = ["tree-sitter"]

[project.optional-dependencies]
dev = ["pytest-cov"]
colorize = ["tree_sitter_lsp"]

[[project.authors]]
name = "Wu Zhenyu"
email = "wuzhenyu@ustc.edu"

[project.license]
text = "GPL v3"

[project.urls]
Homepage = "https://tree-sitter-tmux.readthedocs.io"
Download = "https://github.com/Freed-Wu/tree-sitter-tmux/releases"
"Bug Report" = "https://github.com/Freed-Wu/tree-sitter-tmux/issues"
Source = "https://github.com/Freed-Wu/tree-sitter-tmux"

[tool.scikit-build]
experimental = true

[tool.scikit-build.metadata.version]
provider = "scikit_build_core.metadata.setuptools_scm"

[tool.scikit-build.sdist]
include = ["py.typed"]

[tool.scikit-build.wheel]
packages = ["bindings/python/tree_sitter_tmux"]

[tool.setuptools.dynamic.dependencies]
file = "requirements.txt"

# begin: scripts/update-pyproject.toml.pl
[tool.setuptools.dynamic.optional-dependencies.dev]
file = "requirements/dev.txt"
# end: scripts/update-pyproject.toml.pl

[tool.setuptools_scm]

[tool.mdformat]
number = true

[tool.codespell]
ignore-words-list = "crate"

[tool.doq]
template_path = "templates"

[tool.ruff]
line-length = 79

[tool.ruff.lint]
select = [
  # pycodestyle
  "E",
  # pyflakes
  "F",
  # pyupgrade
  "UP",
  # flake8-bugbear
  "B",
  # flake8-simplify
  "SIM",
  # isort
  "I",
]
ignore = ["D205", "D400"]
preview = true

[tool.ruff.format]
docstring-code-format = true
preview = true

[tool.coverage.report]
exclude_lines = [
  "if TYPE_CHECKING:",
  "if __name__ == .__main__.:",
  "\\s*import tomli as tomllib",
]

[tool.cibuildwheel]
archs = ["all"]
skip = "*37-* *38-* *39-*"
# https://github.com/pypa/cibuildwheel/issues/287#issuecomment-1937451870
test-skip = "*-win32"
before-test = "pip install -rrequirements.txt -rrequirements/dev.txt"
test-command = "pytest {project}"
